require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

// R√©cup√©ration des variables d'environnement Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes');
  console.log('URL Supabase:', supabaseUrl ? '‚úÖ D√©finie' : '‚ùå Manquante');
  console.log('Cl√© Supabase:', supabaseKey ? '‚úÖ D√©finie' : '‚ùå Manquante');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testerSupabaseConfig() {
  console.log('üß™ Test des op√©rations de configuration Supabase...\n');

  // Test 1: V√©rifier si la table existe et contient des donn√©es
  console.log('1Ô∏è‚É£ V√©rification de la configuration existante...');
  const { data: configExistant, error: erreurRecup } = await supabase
    .from('site_config')
    .select('*')
    .single();

  if (erreurRecup) {
    console.log('‚ùå Erreur lors de la r√©cup√©ration:', erreurRecup.message);
  } else {
    console.log('‚úÖ Configuration existante trouv√©e:', configExistant);
  }

  // Test 2: Sauvegarder une configuration de test
  console.log('\n2Ô∏è‚É£ Sauvegarde d\'une configuration de test...');
  const configTest = {
    site: {
      name: 'Boutique Test',
      description: 'Configuration de test'
    },
    pages: {
      home: {
        title: 'Accueil Test',
        subtitle: 'Bienvenue dans notre boutique de test'
      }
    }
  };

  const { data: configSauvegardee, error: erreurSauvegarde } = await supabase
    .from('site_config')
    .upsert({ 
      id: 1,
      config: configTest,
      updated_at: new Date().toISOString()
    })
    .select()
    .single();

  if (erreurSauvegarde) {
    console.log('‚ùå Erreur lors de la sauvegarde:', erreurSauvegarde.message);
  } else {
    console.log('‚úÖ Configuration sauvegard√©e avec succ√®s:', configSauvegardee);
  }

  // Test 3: R√©cup√©rer la configuration sauvegard√©e
  console.log('\n3Ô∏è‚É£ R√©cup√©ration de la configuration sauvegard√©e...');
  const { data: configRecuperee, error: erreurRecup2 } = await supabase
    .from('site_config')
    .select('*')
    .single();

  if (erreurRecup2) {
    console.log('‚ùå Erreur lors de la r√©cup√©ration:', erreurRecup2.message);
  } else {
    console.log('‚úÖ Configuration r√©cup√©r√©e:', configRecuperee);
  }

  console.log('\nüéâ Test termin√© avec succ√®s!');
}

testerSupabaseConfig().catch(console.error);